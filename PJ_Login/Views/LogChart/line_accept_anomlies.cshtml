@using PJ_Login.ViewModels;
@using Newtonsoft.Json;
@model List<LogDBViewModel>
@{
    ViewData["Title"] = "line_accept_anomlies";
}
<style>
    body {
        background-color: #9ccdf2;
        font-family: Arial, sans-serif;
    }

    #page-content-wrapper {
        background-color: white;
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
    }

    #chart-group-1,
    #chart-group-2 {
        display: none;
    }

    .custom-link {
        background-color: #3085d6;
        color: white;
    }

    .collapsed {
        display: block;
    }
</style>
<div class="d-flex" id="wrapper">
    <!-- 側邊導覽列 -->
    <div class="bg-light border-right" id="sidebar-wrapper">
        <div class="list-group list-group-flush">
            <a href="@Url.Action("parallel", "LogChart")" class="list-group-item list-group-item-action custom-link">主要路徑</a>
            <a href="@Url.Action("scatter_bar", "LogChart")" class="list-group-item list-group-item-action custom-link">連線分析</a>
            <a href="#" class="list-group-item list-group-item-action toggle-collapse custom-link" data-target="#chart-group-1">原始資料</a>
            <div id="chart-group-1" class="collapsed">
                <a href="@Url.Action("bar_accept", "LogChart")" class="list-group-item list-group-item-action">accept</a>
                <a href="@Url.Action("bar_client_rst", "LogChart")" class="list-group-item list-group-item-action">client_rst</a>
                <a href="@Url.Action("bar_close", "LogChart")" class="list-group-item list-group-item-action">close</a>
                <a href="@Url.Action("bar_deny", "LogChart")" class="list-group-item list-group-item-action">dney</a>
                <a href="@Url.Action("bar_ip_conn", "LogChart")" class="list-group-item list-group-item-action">ip_conn</a>
                <a href="@Url.Action("bar_server_rst", "LogChart")" class="list-group-item list-group-item-action">server_rst</a>
                <a href="@Url.Action("bar_timeout", "LogChart")" class="list-group-item list-group-item-action">timeout</a>
            </div>
            <a href="#" class="list-group-item list-group-item-action toggle-collapse custom-link" data-target="#chart-group-2">異常檢測</a>
            <div id="chart-group-2" class="collapsed">
                <a href="@Url.Action("line_accept_anomlies", "LogChart")" class="list-group-item list-group-item-action">accept</a>
                <a href="@Url.Action("line_client_rst_anomlies", "LogChart")" class="list-group-item list-group-item-action">client_rst</a>
                <a href="@Url.Action("line_close_anomlies", "LogChart")" class="list-group-item list-group-item-action">close</a>
                <a href="@Url.Action("line_deny_anomlies", "LogChart")" class="list-group-item list-group-item-action">deny</a>
                <a href="@Url.Action("line_ip_conn_anomlies", "LogChart")" class="list-group-item list-group-item-action">ip_conn</a>
                <a href="@Url.Action("line_server_rst_anomlies", "LogChart")" class="list-group-item list-group-item-action">server_rst</a>
                <a href="@Url.Action("line_timeout_anomlies", "LogChart")" class="list-group-item list-group-item-action">timeout</a>
            </div>
        </div>
    </div>

    <!-- 內容區域 -->
    <div id="page-content-wrapper" class="rounded">
        <h1>目的IP的Accept次數統計圖(異常)</h1>
        <canvas id="LineChart" width="1000" height="500"></canvas>
    </div>

</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/lib/jquery/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('.toggle-collapse').click(function (e) {
            e.preventDefault();
            var target = $(this).data('target');
            $(target).slideToggle();
            $(this).toggleClass('collapsed');
        });
    });

    var dataAcceptJson = '@Html.Raw(JsonConvert.SerializeObject(Model.Where(x => x.condition == "accept").OrderBy(x => x.y)))';
    var dataAccept = JSON.parse(dataAcceptJson);
    var dataCount = dataAccept.reduce(function (countMap, item) {
        countMap[item.y] = (countMap[item.y] || 0) + 1;
        return countMap;
    }, {});
    var labels = Object.keys(dataCount);
    var data = Object.values(dataCount);





    //長條圖
    var ctx = document.getElementById('LineChart').getContext('2d');
    var barData = {
        labels: labels, // X軸的標籤
        datasets: [{
            label: 'Action狀態為accept次數',
            data: data, // Y軸的數值
            backgroundColor: 'rgba(0, 123, 255, 0.5)' // 長條的背景顏色
        }]
    };
    Chart.defaults.font.size = 20;
    var barOptions = {
        responsive: true,
        scales: {
            x: {
                display: true,
                title: {
                    display: true,
                    text: 'DIP'
                }
            },
            y: {
                display: true,
                title: {
                    display: true,

                },
                suggestedMin: 0 // Y軸的最小值
            }
        }
    };

    new Chart(ctx, {
        type: 'line',
        data: barData,
        options: barOptions
    });
    setInterval(function () {
        location.reload();
    }, 10000);
</script>
